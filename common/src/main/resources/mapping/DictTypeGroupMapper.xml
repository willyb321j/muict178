<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simon.mapper.DictTypeGroupMapper">
    <resultMap id="BaseResultMap" type="com.simon.model.DictTypeGroup">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="type_group_code" jdbcType="VARCHAR" property="typeGroupCode"/>
    </resultMap>

    <resultMap id="BasicResultMap" type="com.simon.model.DictTypeGroup" extends="BaseResultMap">
        <result column="type_group_name" jdbcType="VARCHAR" property="typeGroupName"/>
    </resultMap>

    <resultMap id="SuperMap" type="com.simon.model.DictTypeGroup" extends="BasicResultMap">
        <!-- 分步查询 -->
        <association property="dictTypes" javaType="java.util.List" column="type_group_code"
                     select="com.simon.mapper.DictTypeMapper.getByGroupCode"/>
    </resultMap>

    <resultMap id="EasyUiTreeGridDtoMap" type="com.simon.dto.EasyUiTreeGridDto">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <collection property="children" ofType="com.simon.dto.EasyUiTreeGridDto" javaType="java.util.List"
                    column="{groupCode=code,language=language}"
                    select="com.simon.mapper.DictTypeMapper.getTreeGridDtos"/>
    </resultMap>

    <resultMap id="DictTypeDtoMap" type="com.simon.dto.DictTypeDto">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
    </resultMap>

    <resultMap id="SelectDtoMap" type="com.simon.dto.SelectDto">
        <result column="label" jdbcType="VARCHAR" property="label"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
    </resultMap>

    <select id="getAll" resultMap="SuperMap">
    SELECT * FROM t_dict_type_group_${language}
  </select>

    <select id="getTreeGridDtos" resultMap="EasyUiTreeGridDtoMap" databaseId="mysql">
        SELECT
        id,
        0 AS pid,
        type_group_code AS code,
        type_group_name AS name,
        'closed' AS state,
        #{language} AS language
        FROM
        t_dict_type_group_${language}
        <where>
            <if test="name != null and name != ''">
                type_group_name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="code != null and code != ''">
                AND type_group_code LIKE CONCAT('%', #{code}, '%')
            </if>
        </where>
    </select>

    <select id="getTreeGridDtos" resultMap="EasyUiTreeGridDtoMap" databaseId="postgresql">
        SELECT
        id,
        0 AS pid,
        type_group_code AS code,
        type_group_name AS name,
        'closed' AS state
        FROM
        t_dict_type_group_${language}
        <where>
            <if test="name != null and name != ''">
                type_group_name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="code != null and code != ''">
                AND type_group_code LIKE CONCAT('%', #{code}, '%')
            </if>
        </where>
    </select>

    <select id="getTreeGridDtos" resultMap="EasyUiTreeGridDtoMap" databaseId="oracle">
        SELECT
        id,
        0 AS pid,
        type_group_code AS code,
        type_group_name AS name,
        'closed' AS state
        FROM
        t_dict_type_group_${language}
        <where>
            <if test="name != null and name != ''">
                type_group_name LIKE CONCAT(CONCAT('%', #{name}), '%')
            </if>
            <if test="code != null and code != ''">
                AND type_group_code LIKE CONCAT(CONCAT('%', #{code}), '%')
            </if>
        </where>
    </select>

    <select id="getDtoById" resultMap="DictTypeDtoMap">
        SELECT
            id,
            0 AS pid,
            type_group_name AS name,
            type_group_code AS code,
            1 AS type
        FROM
            t_dict_type_group_${language}
        WHERE
            id = #{id}
    </select>

    <select id="getSelectDtos" resultMap="SelectDtoMap">
        SELECT
            type_group_name AS label,
            type_group_code AS value
        FROM
            t_dict_type_group_${language}
    </select>
</mapper>