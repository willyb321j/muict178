security:
  basic:
    enabled: false
spring:
  profiles:
    active: oracle #pg, mysql, oracle。默认使用MySQL数据库连接配置。
  thymeleaf:
    prefix: classpath:/templates/ #默认值
    suffix: .html
    mode: HTML #启用不严格检查html
    encoding: UTF-8
    content-type: text/html
    cache: false #页面热部署
  #  jmx:
  #    default-domain: ShowCase #解决javax.management.InstanceAlreadyExistsException
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      max-active: 20
      initial-size: 1
      max-wait: 60000
      min-idle: 3
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      remove-abandoned: true
      remove-abandoned-timeout: 180
      connection-properties: clientEncoding=UTF-8
      test-while-idle: false
      test-on-borrow: true
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,log4j
      use-global-data-source-stat: true
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        #        login-username: simon
        #        login-password: 19961120
        reset-enable: true
        allow: 127.0.0.1
        url-pattern: /druid/*
  # 若要使用Redis，请取消以下redis配置的注释，并修改连接参数。
  #  redis:
  #    database: 0 #Redis数据库索引（默认为0）
  #    host: 127.0.0.1 #Redis服务器地址
  #    port: 6379 #Redis服务器连接端口
  #    password: 19941017 #Redis服务器连接密码（默认为空）
  #    pool:
  #      max-active: 8 #连接池最大连接数（使用负值表示没有限制）
  #      max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
  #      max-idle: 8 #连接池中的最大空闲连接
  #      min-idle: 0 #连接池中的最小空闲连接
  #    timeout: 0 #连接超时时间（毫秒）
  cache:
    # 若要使用Ehcache缓存，请注释RedisConfig的@Configuration和@EnableCaching注解，并取消EhcacheConfig的@Configuration和@EnableCaching注解的注释。
    # 若要使用Redis缓存，请注释EhcacheConfig的@Configuration和@EnableCaching注解，并取消RedisConfig的@Configuration和@EnableCaching注解的注释。
    type: ehcache #redis, ehcache。默认是Ehcache缓存。
    ehcache:
      config: ehcache.xml
    cache-names: oauthUserCache,listOptionCache,smsCache
  jpa:
    hibernate:
      naming:
        #解决如果Column注解定义的字段名和属性名一样，会被忽略的问题。
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: none #validate
    show-sql: true
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
  jackson:
    serialization:
      write-dates-as-timestamps: false
    # 格式化返回日期
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  http:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
    encoding:
      force: true
  aop:
    proxy-target-class: true
  mail:
    default-encoding: UTF-8
    protocol: smtp
    test-connection: true
    host: smtp.qq.com
    port: 587
    username: 2313036302@qq.com
    password: xjtekyebkhifdjad
    properties:
      mail:
        debug: true
        smtp:
          auth: true
          timeout: 25000
          starttls:
            enabled: true
            required: true

logging:
  level:
    org.springframework.web: INFO
    Hibernate: ERROR
    io.swagger.models.parameters.AbstractSerializableParameter: error
    # 设置MyBatis SQL日志等级（该配置已移动到logback.xml）
    # com.simon.mapper: DEBUG
#eureka:
#  client:
#    service-url:
#      defaultZone: http://127.0.0.1:8761/eureka/
#  instance:
#    prefer-ip-address: true

jasypt:
  encryptor:
    password: 19941017

info:
  app:
    name: "@project.name@"
    description: "@project.description@"
  build:
    groupId: "@project.groupId@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    version: '@project.version@'
  git:
    branch: ${git.branch}
    commit:
      id: ${git.commit.id}
      time: ${git.commit.time}
  env:
    java:
      vendor: ${java.specification.vendor}
      vm-name: ${java.vm.name}
      runtime-version: ${java.runtime.version}

# 获取更全面的git信息
management:
  info:
    git:
      mode: full
  security:
    enabled: false

#endpoints:
#  jmx:
#    unique-names: true

# mybatis配置
mybatis:
  check-config-location: false
  type-aliases-package: ${base.package}.model
  configuration:
    map-underscore-to-camel-case: true
    # 二级缓存的总开关
    cache-enabled: false
  mapper-locations: classpath:mapping/*.xml

# 解决java.lang.IllegalArgumentException: Request header is too large
server:
  max-http-header-size: 1048576
  tomcat:
    max-http-post-size: 2097152