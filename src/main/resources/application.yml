server:
  port: 8182
security:
  basic:
    enabled: false
spring:
  thymeleaf:
    prefix: classpath:/templates/ #默认值
    suffix: .html
    mode: LEGACYHTML5 #启用不严格检查html
    encoding: UTF-8
    content-type: text/html
    cache: false #页面热部署
#  jmx:
#    default-domain: ShowCase #解决javax.management.InstanceAlreadyExistsException
  datasource:
# PostgreSQL连接信息
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://127.0.0.1:5432/thymelte?useUnicode=true&amp;characterEncoding=UTF-8
    username: ENC(hTpbG9fq+7P3SntmXuNtDxbtWDqRuPV+) #明文postgres
    password: ENC(abdq6LyOspryFQHCqzEMTxRozyJVjIA4) #明文19961120
# MySQL连接信息
#    driver-class-name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://127.0.0.1:3306/thymelte?useUnicode=true&characterEncoding=utf-8&useSSL=false
#    username: ENC(YiYjVwTulDGN//YaB3KbuA==) #明文root
#    password: ENC(BZUIhx1tIC75T4JTYROwbsPIRuhrPQMx) #明文19941017
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      max-active: 20
      initial-size: 1
      max-wait: 60000
      min-idle: 3
      remove-abandoned: true
      remove-abandoned-timeout: 180
      connection-properties: clientEncoding=UTF-8
      test-while-idle: false
  redis:
    database: 0 #Redis数据库索引（默认为0）
    host: 127.0.0.1 #Redis服务器地址
    port: 6379 #Redis服务器连接端口
    password: 19941017 #Redis服务器连接密码（默认为空）
    pool:
      max-active: 8 #连接池最大连接数（使用负值表示没有限制）
      max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 8 #连接池中的最大空闲连接
      min-idle: 0 #连接池中的最小空闲连接
    timeout: 0 #连接超时时间（毫秒）
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  jackson:
    serialization: true
  http:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
logging:
  level:
    org.springframework.web: INFO
    Hibernate: ERROR
#eureka:
#  client:
#    service-url:
#      defaultZone: http://127.0.0.1:8761/eureka/
#  instance:
#    prefer-ip-address: true

jasypt:
  encryptor:
    password: 19941017

info:
  app:
    name: @project.name@
    description: @project.description@
  build:
    groupId: @project.groupId@
    artifact: @project.artifactId@
    name: @project.name@
    version: @project.version@
  git:
    branch: ${git.branch}
    commit:
      id: ${git.commit.id}
      time: ${git.commit.time}
  env:
    java:
      vendor: ${java.specification.vendor}
      vm-name: ${java.vm.name}
      runtime-version: ${java.runtime.version}

# 获取更全面的git信息
management:
  info:
    git:
      mode: full
  security:
    enabled: false

#endpoints:
#  jmx:
#    unique-names: true

# mybatis配置
mybatis:
  mapper-locations: classpath:/mapping/*Mapper.xml
  type-aliases-package: com.simon.model

mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:/mapping/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.simon.model
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    #table-prefix: mp_
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    # meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'

#pagehelper分页插件
pagehelper:
    reasonable: true
    params: count=countSql
    # oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012
    helper-dialect: postgresql
    support-methods-arguments: true